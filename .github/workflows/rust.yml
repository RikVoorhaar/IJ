name: Rust

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

env:
    CARGO_TERM_COLOR: always
    CARGO_TARGET_DIR: ${{ github.workspace }}/target

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - name: Cache cargo registry
              uses: actions/cache@v3
              with:
                  path: ~/.cargo/registry
                  key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-registry-

            - name: Cache cargo index
              uses: actions/cache@v3
              with:
                  path: ~/.cargo/git
                  key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-index-

            - name: Cache build
              uses: actions/cache@v3
              with:
                  path: ${{ github.workspace }}/target
                  key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-build-
            - name: Install Rust
              run: rustup update stable
            - name: Install cargo-llvm-cov
              uses: taiki-e/install-action@cargo-llvm-cov
            - name: Generate code coverage and test
              run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
              working-directory: ./ijzer_lib
            - name: Test macros
              run: cargo test --verbose
              working-directory: ./ijzer

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }} 
                  files: ./ijzer_lib/lcov.info
                  fail_ci_if_error: true
